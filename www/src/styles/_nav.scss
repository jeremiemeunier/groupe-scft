@use "sass:color";
@use "sass:map";

@mixin header($theme) {
  $colors: map.get($map: $theme, $key: 'colors');
  $radius: map.get($map: $theme, $key: 'radius');

  &.header-nav {
    display: grid;
    align-items: center;
    align-content: center;
    justify-content: start;
    justify-items: start;

    height: 48px;
    padding: 0 40px;

    ul,
    li {
      padding: 0;
      margin: 0;

      list-style-type: none;

      text-transform: uppercase;
    }

    ul {
      display: grid;
      grid-auto-flow: column;
      grid-auto-columns: min-content;
      align-items: center;
      column-gap: 32px;

      li a {
        display: grid;
        grid-template-columns: min-content;
        grid-auto-flow: column;
        column-gap: 12px;
        align-items: center;
        align-content: center;
        justify-items: center;
        justify-content: center;

        position: relative;

        height: 32px;
        background: none;
        border-bottom-width: 2px;
        border-bottom-style: solid;
        border-bottom-color: transparent;

        color: map.get($map: $colors, $key: "content");
        font-weight: 600;
        font-size: .9em;
        white-space: nowrap;
        transition:
          color .3s,
          background-color .3s,
          opacity .3s;

        &:before {
          position: absolute;
          top: 100%;
          left: 0;

          content: "";
          height: 1px;
          width: 0%;
          background: map.get($colors, "content");
          transition:
            width .3s;
        }

        &:not(.active):hover:before {
          width: 100%;
        }

        &.active {
          background-color: rgba(map.get($map: $colors, $key: "main"), .3);
        }

        &:hover,
        &:focus,
        &:target {
          outline: none;
        }
      }
    }
  }
}

@mixin pagination($theme) {
  $colors: map.get($map: $theme, $key: 'colors');
  $radius: map.get($map: $theme, $key: 'radius');

  &.pagination {
    height: 40px;

    .pagination-select {
      display: grid;
      position: relative;

      min-width: 64px;
      height: 40px;
      box-sizing: border-box;
      border: 1px solid rgba(map.get($map: $colors, $key: "content"), .3);
      margin-left: -1px;

      select {
        unset: all;
        min-width: 16px;
        padding-right: 32px;
        background-color: color.adjust($color: map.get($colors, "background_1"), $lightness: -5%);
      }

      .icon {
        position: absolute;
        top: 50%;
        right: 16px;

        pointer-events: none;
        transform:
          translateX(50%) translateY(-50%);
      }
    }
  }
}

@mixin list($theme) {
  $radius: map.get($map: $theme, $key: 'radius');
  $colors: map.get($map: $theme, $key: 'colors');
  $color_schemas: map.get($map: $theme, $key: 'color_schemas');

  &.nav-list {

    ul {

      padding: 0;
      margin: 0;
      list-style: none;

      li {
        list-style: none;
      }

      span.separator {
        display: block;

        height: 1px;
        margin: 8px;

        @if $color_schemas =='default' {
          background: rgba(0, 0, 0, .1);
        }

        @else {
          background: rgba(255, 255, 255, .2);
        }
      }

      a {
        display: grid;
        grid-template-columns: 24px 1fr;
        grid-template-areas: "icon label";
        grid-auto-flow: column;
        grid-auto-columns: min-content;
        align-items: center;
        gap: 8px;

        position: relative;

        height: 48px;
        background: none;
        border: none;
        border-radius: map.get($map: $radius, $key: 'small');
        padding: 0 8px;

        color: map.get($map: $colors, $key: "content");
        font-weight: 500;
        transition:
          background-color .3s;

        &:hover {
          background-color: map.get($map: $colors, $key: "background_2");
        }

        .icon {
          grid-area: icon;

          color: map.get($map: $colors, $key: "main");
        }

        span {
          grid-area: label;
        }
      }
    }
  }
}

@mixin tab($theme) {
  $colors: map.get($map: $theme, $key: 'colors');
  $radius: map.get($map: $theme, $key: 'radius');

  &.tab-nav {
    display: grid;
    grid-auto-flow: column;
    grid-auto-columns: min-content;
    gap: 2px;

    height: 48px;
    border-width: 1px;
    border-style: solid;
    border-color: rgba(map.get($map: $colors, $key: "content"), .3);
    background: map.get($map: $colors, $key: 'background_2');
    border-radius: map.get($map: $radius, $key: 'small');
    padding: 2px;

    &.tab-size-full {
      grid-auto-columns: 1fr;
    }

    a,
    button {
      display: grid;
      justify-content: center;
      justify-items: center;
      align-items: center;
      align-content: center;

      height: 100%;
      padding: 0 24px;
      border: 1px solid transparent;
      border-radius: map.get($map: $radius, $key: 'small') - 2px;
      box-sizing: border-box;

      cursor: pointer;
      color: map.get($map: $colors, $key: 'content');
      font-size: 16px;

      transition:
        background-color .3s ease-in-out,
        color .3s ease-in-out;

      &.icon {
        grid-template-columns: 32px 1fr;
        column-gap: 8px;
      }

      &:hover {
        background-color: map.get($map: $colors, $key: 'background_3');
      }

      &.active {
        background-color: map.get($map: $colors, $key: 'content');
        color: map.get($map: $colors, $key: 'background_1');
        box-shadow: 0 0 24px rgba(0, 0, 0, .15);
      }
    }
  }
}

@mixin card($theme) {
  $colors: map.get($theme, 'colors');
  $radius: map.get($theme, 'radius');

  &.app-nav {
    display: grid;

    @media all and (max-width: 720px) {
      grid-template-columns: repeat(3, 1fr);
      grid-auto-flow: row;
    }

    @media all and (max-width: 480px) {
      grid-template-columns: repeat(2, 1fr);
      grid-auto-flow: row;
      padding: 0 16px;
    }

    ul {
      display: grid;
      grid-auto-flow: column;
      grid-auto-columns: 1fr;
      gap: 8px;

      padding: 0;

      li {
        list-style: none;
      }
    }

    a {
      display: grid;
      grid-template-columns: 1fr 24px;
      column-gap: 16px;

      padding: 16px;
      height: 72px;
      border-radius: map.get($map: $radius, $key: 'medium');
      border: 2px solid map.get($colors, 'content');
      overflow: hidden;
      background: map.get($colors, 'background_1');

      font-size: 16px;
      font-weight: 500;
      text-decoration: none;
      transition: background-color .3s, color .3s;

      &.active,
      &:hover {
        background: map.get($colors, 'content');
        transition: background-color .3s;

        span,
        i {
          color: map.get($colors, 'background_1');
          transition: color .3s;
        }
      }

      &:target,
      &:focus {
        outline: 4px solid rgba($color: map.get($colors, 'main'), $alpha: .3);
      }
    }
  }

  .filter-nav {
    display: grid;
    grid-auto-flow: column;
    grid-auto-columns: min-content;
    gap: 16px;

    @media all and (max-width: 960px) {
      grid-auto-flow: row;
    }

    .group {
      display: grid;
      grid-auto-flow: column;
      grid-auto-columns: min-content;
      gap: 16px;

      @media all and (max-width: 960px) {
        grid-auto-flow: row;
      }
    }
  }
}

@mixin ariane($theme) {
  $colors: map.get($map: $theme, $key: "colors");

  &.ariane {
    display: grid;
    grid-template-columns: min-content;
    grid-auto-flow: column;
    grid-auto-columns: minmax(40px, min-content);
    align-items: center;

    padding-top: 24px;

    color: rgba($color: map.get($colors, 'content'), $alpha: .6);

    a {
      display: grid;
      align-items: center;
      justify-content: center;

      height: 40px;
      min-width: 40px;

      color: rgba($color: map.get($colors, 'content'), $alpha: .6);
      white-space: nowrap;
      transition:
        color .3s;

      &:hover {
        color: map.get($map: $colors, $key: "main");
      }
    }

    span {
      display: grid;
      align-items: center;
      justify-content: center;

      height: 40px;
      min-width: 40px;

      color: map.get($colors, 'content');
      white-space: nowrap;
    }
  }
}

@mixin presentation($theme) {
  $fontsize: map.get($map: $theme, $key: "fontsize");
  $colors: map.get($map: $theme, $key: "colors");

  &.nav-presentation {
    padding: 0;
    margin: 0;

    li {
      padding: 16px 0;
      margin: 0;
      list-style: none;
    }

    button {
      padding: 0;
      margin: 0;
      opacity: .4;

      cursor: pointer;
      font-size: map.get($map: $fontsize, $key: "h3");
      transition:
        opacity .3s,
        color .3s;

      &.active {
        opacity: 1;
      }

      &:hover {
        opacity: 1;
        color: map.get($map: $colors, $key: "main");
      }
    }
  }
}